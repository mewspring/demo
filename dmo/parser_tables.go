// generated by Textmapper; DO NOT EDIT

package dmo

import (
	"fmt"
)

var tmNonterminals = [...]string{
	"Command_optlist",
	"File",
	"IntLit",
	"FloatLit",
	"FileHeader",
	"Command",
	"CommandTypeEnum",
	"EventData",
	"EventType",
}

func symbolName(sym int32) string {
	if sym < int32(NumTokens) {
		return Token(sym).String()
	}
	if i := int(sym) - int(NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmAction = []int32{
	-1, 3, -1, 1, -1, -3, -1, 9, 0, -1, -1, -1, -1, 5, 4, -1, -1, 8, -1, -1, 11,
	-1, -1, 6, 7, -1, -1, -1, 10, -1, -2,
}

var tmLalr = []int32{
	3, -1, 0, 2, -1, -2,
}

var tmGoto = []int32{
	0, 2, 2, 8, 26, 28, 42, 44, 46, 58, 60, 62, 64, 66, 68, 70,
}

var tmFromTo = []int8{
	29, 30, 15, 17, 19, 23, 21, 24, 0, 1, 4, 1, 5, 7, 10, 1, 11, 13, 16, 1, 18,
	20, 25, 1, 27, 1, 11, 14, 2, 4, 6, 10, 9, 11, 12, 16, 15, 18, 22, 25, 26, 27,
	3, 5, 0, 29, 0, 2, 4, 6, 10, 12, 16, 19, 25, 26, 27, 28, 11, 15, 0, 3, 5, 8,
	5, 9, 18, 21, 18, 22,
}

var tmRuleLen = []int8{
	2, 0, 2, 1, 1, 1, 8, 6, 4, 1, 5, 1,
}

var tmRuleSymbol = []int32{
	6, 6, 7, 8, 9, 9, 10, 11, 11, 12, 13, 14,
}

var tmRuleType = [...]NodeType{
	0,               // Command_optlist : Command_optlist Command
	0,               // Command_optlist :
	File,            // File : FileHeader Command_optlist
	IntLit,          // IntLit : int_lit_tok
	FloatLit,        // FloatLit : float_lit_tok
	FloatLit,        // FloatLit : int_lit_tok
	FileHeader,      // FileHeader : IntLit ',' IntLit ',' IntLit ',' IntLit _new_line
	Command,         // Command : CommandTypeEnum ',' FloatLit ',' EventData _new_line
	Command,         // Command : CommandTypeEnum ',' FloatLit _new_line
	CommandTypeEnum, // CommandTypeEnum : int_lit_tok
	EventData,       // EventData : EventType ',' IntLit ',' IntLit
	EventType,       // EventType : int_lit_tok
}
